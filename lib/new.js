// Generated by CoffeeScript 1.6.3
(function() {
  var MULTIMIX, TRM, alert, badge, debug, echo, help, info, log, rpr, warn, whisper;

  TRM = require('coffeenode-trm');

  rpr = TRM.rpr.bind(TRM);

  badge = '﴾base﴿';

  log = TRM.get_logger('plain', badge);

  info = TRM.get_logger('info', badge);

  whisper = TRM.get_logger('whisper', badge);

  alert = TRM.get_logger('alert', badge);

  debug = TRM.get_logger('debug', badge);

  warn = TRM.get_logger('warn', badge);

  help = TRM.get_logger('help', badge);

  echo = TRM.echo.bind(TRM);

  MULTIMIX = require('coffeenode-multimix');

  this.binary_expression = function(subtype, operator, left, right, verbatim) {
    var R;
    R = this._new_node('BinaryExpression', subtype, verbatim);
    R['operator'] = operator;
    R['left'] = left;
    R['right'] = right;
    return R;
  };

  this.block_statement = function(subtype, body, verbatim) {
    var R;
    R = this._new_node('BlockStatement', subtype, verbatim);
    R['body'] = body;
    return R;
  };

  this.literal = function(subtype, raw, value, verbatim) {
    var R;
    R = this._new_node('Literal', subtype, verbatim);
    R['raw'] = raw;
    R['value'] = value;
    return R;
  };

  this.x_comment = function(text, subtype) {
    var verbatim;
    if (subtype == null) {
      subtype = 'comment';
    }
    verbatim = '/* ' + (text.replace(/\/\*/g, '/ *')) + ' */';
    return this.literal(subtype, 'xxx', 'xxx', verbatim);
  };

  this.x_use_statement = function(keyword, argument) {
    var text;
    text = "" + keyword + " " + (rpr(argument));
    return this.x_comment(text, 'use-statement');
  };

  this._new_node = function(type, subtype, verbatim) {
    var R;
    R = {
      type: type,
      'x-subtype': subtype
    };
    if (verbatim != null) {
      R['x-verbatim'] = verbatim;
    }
    return R;
  };

  this._add_verbatim = function(node, verbatim) {};

  MULTIMIX.bundle(this);

}).call(this);
